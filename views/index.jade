extends layout
block content
  .container
    h2#error.alert-danger.text-center
    input#cityName.form-control.input-lg.text-center(type='text', placeholder='City name')
    br
    p#get-weather
      a.btn.btn-lg.btn-success.btn-block(href='#', role='button') Get Weather Info
  .container.main
    .jumbotron
      .row
        .col-md-7.text-center
          h1#cityNameBanner
          canvas#icon1(width='128', height='128')
          .weather-forecast
            .day
              h3 Today
              dl.day.dl-horizontal
                dt Humidity:
                dd#humidity
                dt Pressure:
                dd#pressure
                dt Temperature:
                dd#temperature
                dt High:
                dd#high
                dt Low:
                dd#low
        .col-md-5#comments-section
          h2.text-center Comments
          form#comment-form
            ul#comment-list
            input.form-control.text-center#comment-box(type='text', placeholder='Enter a Comment')
            button.btn.btn-primary.btn-block(type="submit") Post
  .container
        //- fieldset
        //-   input#cityName(type='text', placeholder='City name')
        //- p#get-weather
        //-   a.btn.btn-lg.btn-success(href='#', role='button') Get Weather
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js')
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js')
    script(src='http://learn.themakersquare.com/materials/vendor/jquery.riot.js')
    script(src='http://learn.themakersquare.com/materials/week-7/weather-icons.js')
    script(src='/javascripts/global.js')
    script(src='/javascripts/client.js')
    script.
      $(function($) {
        var socket = io.connect();

        var $commentForm = $('#comment-form');
        var $commentBox = $('#comment-box');
        var $commentList = $('#comment-list');

        // Initialize skycons
        var skycons = new Skycons({"color": "black"});

        // Sets weather button to variable
        var $weatherButton = $('#get-weather');

        $weatherButton.on('click', function(e) {
          e.preventDefault;
          console.log('Fetching weather...');

          // clear comments so they can be re populated by
          // comments for a specific city
          $('.comment').remove();

          // Grab city name string from input field and
          // store is as lower case to prevent duplicate
          // entries i.e. Austin and austin or AUSTIN
          $cityName = $('#cityName').val().toLowerCase();
          // clear error messages if any
          $('#error').hide();
          // Fade out main display so it can fade back in
          $('.container.main').fadeOut(200);

          $.ajax({
            url: "http://api.openweathermap.org/data/2.5/weather?q=" + $cityName + "&mode=json&units=imperial",
            type: "get",
            dataType: "json",
            success: function (data) {
              console.log(data.cod);
              // Only show results if what is typed in city name
              // input is valid
              if (data.cod === 200) {
                console.log(data.cod);

                // store city name in array
                socket.emit('send city name', $cityName, function(data) {
                });

                // little trick I found to capitalize lower case city name variable
                $('#cityNameBanner').text($cityName.toLowerCase().replace(/\b[a-z]/g, function(letter) {
                      return letter.toUpperCase();
                  }) + " Weather");

                // fade in main container with weather data
                $('.container.main').fadeIn(200);

                // Update named fields with API weather data for specific city
                $('#humidity').text(data.main.humidity + "%");
                $('#pressure').text(data.main.pressure);
                $('#temperature').text(data.main.temp);
                $('#high').text(data.main.temp_max);
                $('#low').text(data.main.temp_min);

                // Clear city weather input value
                $('#cityName').val('');

                // Display weather condition info reported from API JSON
                var weatherCondition = data.weather[0].main
                console.log(weatherCondition);

                // Display appropriate Skycon based on current weather.
                // May not always work--unsure of all
                // possible weather descriptions at the moment
                if (weatherCondition.indexOf("Rain") != -1) {
                  skycons.add("icon1", Skycons.RAIN);
                } else if (weatherCondition.indexOf("Clear") != -1) {
                  skycons.add("icon1", Skycons.CLEAR_DAY);
                } else if (weatherCondition.indexOf("Wind") != -1) {
                  skycons.add("icon1", Skycons.WIND);
                } else if (weatherCondition.indexOf("Fog") != -1) {
                  skycons.add("icon1", Skycons.FOG);
                } else if (weatherCondition.indexOf("Clouds") != -1) {
                  skycons.add("icon1", Skycons.CLOUDY);
                } else if (weatherCondition.indexOf("Snow") != -1) {
                  skycons.add("icon1", Skycons.SNOW);
                } else if (weatherCondition.indexOf("Mist") != -1) {
                  skycons.add("icon1", Skycons.FOG);
                }
                // feel free to add more or refactor...

                // Animate Skycons
                skycons.play();
              } else {
                // Return what was typed into city name input if gibberish
                console.log("Sorry, please enter a city");
                // display any errors in a bootstrap styled error flash
                $('#error').fadeIn(200).html("Sorry, " + $cityName + " is either not a city or is spelled incorrectly.");
                // clear city name input field
                $('#cityName').val('');
              }
            },
            error: function(xhr, status) {
              // In case there's an error on the API side
              console.log("There was an error");
              $('#error').fadeIn(200).html("There was an error, please try again later");
            }
          });
         });

        // when Post button is clicked for submitting a new comment
        $commentForm.submit(function(e) {
          e.preventDefault;
          // grab text in comment box, emit create comment event,
          // then clear for next comment
          socket.emit('create comment', $commentBox.val());
          $commentBox.val('');
        });

        socket.on('new comment', function(data) {
          $cityName = $('#city-name').val();
          $commentList.append("<li class='comment'>" + data.comment + "</li>");
        });

        socket.on('load comments for city', function(docs) {
          $.each(docs, function ( index, value ) {
            $commentList.append("<li class='comment'>" + value.comment + "</li>");
          });
        });
      });
